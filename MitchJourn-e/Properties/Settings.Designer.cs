//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MitchJourn_e.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.5.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".25")]
        public string ImagePromptWeight {
            get {
                return ((string)(this["ImagePromptWeight"]));
            }
            set {
                this["ImagePromptWeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public string Iter {
            get {
                return ((string)(this["Iter"]));
            }
            set {
                this["Iter"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("512")]
        public string Width {
            get {
                return ((string)(this["Width"]));
            }
            set {
                this["Width"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("512")]
        public string Height {
            get {
                return ((string)(this["Height"]));
            }
            set {
                this["Height"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("25")]
        public string Steps {
            get {
                return ((string)(this["Steps"]));
            }
            set {
                this["Steps"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1336")]
        public string Seed {
            get {
                return ((string)(this["Seed"]));
            }
            set {
                this["Seed"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("7.5")]
        public string Scale {
            get {
                return ((string)(this["Scale"]));
            }
            set {
                this["Scale"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("C:\\invokeai\\")]
        public string MainPath {
            get {
                return ((string)(this["MainPath"]));
            }
            set {
                this["MainPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".venv\\scripts\\txt2img.py")]
        public string TextToImagePath {
            get {
                return ((string)(this["TextToImagePath"]));
            }
            set {
                this["TextToImagePath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".venv\\scripts\\img2img.py")]
        public string ImageToImagePath {
            get {
                return ((string)(this["ImageToImagePath"]));
            }
            set {
                this["ImageToImagePath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("configs\\stable-diffusion\\v1-inference.yaml")]
        public string ConfigPath {
            get {
                return ((string)(this["ConfigPath"]));
            }
            set {
                this["ConfigPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("models\\ldm\\stable-diffusion-v1\\model.ckpt")]
        public string ModelPath {
            get {
                return ((string)(this["ModelPath"]));
            }
            set {
                this["ModelPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public string SlowMode {
            get {
                return ((string)(this["SlowMode"]));
            }
            set {
                this["SlowMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".5")]
        public string gfpganScale {
            get {
                return ((string)(this["gfpganScale"]));
            }
            set {
                this["gfpganScale"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public string gfpganUprezScale {
            get {
                return ((string)(this["gfpganUprezScale"]));
            }
            set {
                this["gfpganUprezScale"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("512")]
        public string gfpganBgTileSize {
            get {
                return ((string)(this["gfpganBgTileSize"]));
            }
            set {
                this["gfpganBgTileSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("k_dpmpp_2_a")]
        public string SamplerType {
            get {
                return ((string)(this["SamplerType"]));
            }
            set {
                this["SamplerType"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public string UseFullPrecision {
            get {
                return ((string)(this["UseFullPrecision"]));
            }
            set {
                this["UseFullPrecision"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("512:512")]
        public string AspectRatio11 {
            get {
                return ((string)(this["AspectRatio11"]));
            }
            set {
                this["AspectRatio11"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("864:576")]
        public string AspectRatio32 {
            get {
                return ((string)(this["AspectRatio32"]));
            }
            set {
                this["AspectRatio32"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("960:544")]
        public string AspectRatio169 {
            get {
                return ((string)(this["AspectRatio169"]));
            }
            set {
                this["AspectRatio169"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("576:864")]
        public string AspectRatio23 {
            get {
                return ((string)(this["AspectRatio23"]));
            }
            set {
                this["AspectRatio23"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("544:960")]
        public string AspectRatio920 {
            get {
                return ((string)(this["AspectRatio920"]));
            }
            set {
                this["AspectRatio920"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public string EnableWelcomePrompt {
            get {
                return ((string)(this["EnableWelcomePrompt"]));
            }
            set {
                this["EnableWelcomePrompt"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ArrayOfString xmlns:xsd=\"http://www.w3." +
            "org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n  <s" +
            "tring>GPT3/Elaborate as an master painter=Using only nouns and adjectives, descr" +
            "ibe the painting as a master artist historian. This is what the painting looks l" +
            "ike:</string>\r\n  <string>GPT3/Elaborate as a master photographer=Using only noun" +
            "s and adjectives, and describing technical details, elaborate on the description" +
            " of a photo from the perspective of a professional photographer. This is what th" +
            "e photo looks like:</string>\r\n  <string>GPT3/Text to prompt=Using only nouns and" +
            " adjectives, reduce this group of words to only the most important details:</str" +
            "ing>\r\n  <string>Random/Random Word=*random*</string>\r\n  <string>Artists/Greg Rut" +
            "kowski (dark concept art)=by greg rutkowski</string>\r\n  <string>Artists/Thoma Ki" +
            "nkades (Flowery Landscape)=by thomas kinkade</string>\r\n  <string>Artists/John Be" +
            "rkey (Detailed paintings)=very detailed painting by John Berkey</string>\r\n  <str" +
            "ing>Artists/William-Adolphe Bouguereau (Old style painting)=painting by William-" +
            "Adolphe Bouguereau</string>\r\n  <string>Artists/Claude Monet (Noisy painting)=pai" +
            "nting by Claude Monet</string>\r\n  <string>Artists/Ernest Zacharevic (Wall mural)" +
            "=wall mural by Ernest Zacharevic</string>\r\n  <string>Artists/Stephan Martiniere " +
            "(sci-fi concept art)=by Stephan Martiniere</string>\r\n  <string>Artists/Carl Bark" +
            "s (Cartoonist)=cartoon by Carl Barks</string>\r\n  <string>Artists/Peter Gric (Cre" +
            "epy drawings)=Peter Gric print</string>\r\n  <string>Artists/Sung Choi (Sci-Fi fan" +
            "tacy concept art)=trending on artstation by sung choi</string>\r\n  <string>Artist" +
            "s/Ilya Kuvshinov (Retro anime portraits)=by ilya kuvshinov</string>\r\n  <string>A" +
            "rtists/Andreas Rocha (Fantacy landscapes)=by andreas rocha</string>\r\n  <string>A" +
            "rtists/Lois Van Baarle (Paited portraits)=by lois van baarle</string>\r\n  <string" +
            ">Artists/Rossdraws (Digital art portraits)=by rossdraws</string>\r\n  <string>Arti" +
            "sts/Rembrandt (Baroque paintings)=by Rembrandt</string>\r\n  <string>Artists/Marc " +
            "Simonetti (Detailed dark digital landscapes)=highly detailed by marc simonetti</" +
            "string>\r\n  <string>Artists/Luis Royo (Creepy detailed portraits)=by Luis Royo</s" +
            "tring>\r\n  <string>Artists/Beksiński (Creepy abstract paintings)=by beksiński</st" +
            "ring>\r\n  <string>Artists/Hieronymus Bosch (Renaissance paintings)=by hieronymus " +
            "bosch</string>\r\n  <string>Styles/Midjourney1=Splash art, light dust, magnificent" +
            ", details, sharp focus, intricate, beautiful, triadic contrast colors, trending " +
            "artstation, pixiv, digital art</string>\r\n  <string>Styles/Midjourney2=Splash art" +
            " light dust trending Professional majestic oil painting of establishing shot by " +
            "Ed Blinkey and Atey Ghailan and Studio Ghibli and Jeremy Mann and Greg Manchess " +
            "and Antonio Moro volumetric lighting, dramatic lighting</string>\r\n  <string>Styl" +
            "es/Photo=f/1.4 50mm 200iso 4k</string>\r\n  <string>Styles/iPhone photo=iPhone pho" +
            "to</string>\r\n  <string>Styles/Portrait Photography1=facial asymmetry, striking f" +
            "eatures, tack sharp, fine-art photography, 180mm f/1.8 200iso</string>\r\n  <strin" +
            "g>Styles/Stability Portrait=ultrarealistic uhd faces, Kodak Ultramax 800, pexels" +
            ", 85mm, casual pose, 35mm film roll photo, hard light, detailed skin texture, ma" +
            "sterpiece, sharp focus, pretty, lovely, adorale, attractive, hasselblad, candid " +
            "street podrait</string>\r\n  <string>Styles/Landscape=octane render 4k unreal engi" +
            "ne cryengine 200iso dynamic range hdr wonderous awesome greg rutkowski sung choi" +
            " thomas kinkade vincent van gogh</string>\r\n  <string>Styles/Stability Landscape1" +
            "=unsplash contest winner, breath-taking beautiful, warm shades of blue, video st" +
            "ill</string>\r\n  <string>Styles/High Quality=hyperdetailed hd 4k 8k sharp focus h" +
            "ighly detailed uhd</string>\r\n  <string>Styles/Elegant Portrait=portrait photo he" +
            "adshot by mucha, sharp focus, elegant, render, octane, detailed, award winning p" +
            "hotography, masterpiece, rim lit</string>\r\n  <string>Styles/Artistic Portrait=a " +
            "vibrant professional studio portrait photography casual, delightful, intricate, " +
            "piercing eyes, nouveau, curated collection, annie leibovitz, nikon, award winnin" +
            "g, breathtaking, groundbreaking, superb, outstanding, lensculture portrait award" +
            "s, photoshopped, dramatic lighting, 8k</string>\r\n  <string>Styles/Rendered Portr" +
            "ait=soft, octane render, unreal engine, photograph, realistic skin texture, phot" +
            "orealistic, hyper realism, highly detailed, 85mm portrait photography, award win" +
            "ning, hard rim lighting photography</string>\r\n  <string>Styles/Stary Portrait=a " +
            "portrait with a luminous clothing, eyes shut, mouth closed, wind, sky, clouds, t" +
            "he moon, moonlight, stars, universe, fireflies, butterflies, lights, lens flares" +
            " effects, swirly bokeh, brush effect, In style of Yoji Shinkawa, Jackson Pollock" +
            ", wojtek fus, by Makoto Shinkai, concept art, celestial, amazing, astonishing, w" +
            "onderful, beautiful, highly detailed, centered</string>\r\n  <string>Styles/Photob" +
            "ashing=photobashing</string>\r\n  <string>Styles/Algorithmic Art=algorithmic art</" +
            "string>\r\n  <string>Styles/Stars and Galaxies=composed of billions of stars, digi" +
            "tal art</string>\r\n  <string>Styles/Cartoon dramatic style=digital art, 2.5D styl" +
            "e</string>\r\n  <string>Styles/Made of smoke=made of very detailed curling wispy g" +
            "lowing multicolored smoke, digital art, volumetric, 3D render, Octane render</st" +
            "ring>\r\n  <string>Styles/Detailed Particles=detailed particle, digital art</strin" +
            "g>\r\n  <string>Styles/Mixed Media=mixed media</string>\r\n  <string>Styles/Magical " +
            "world=magical world</string>\r\n  <string>Styles/concept art=concept art splash ar" +
            "t</string>\r\n  <string>Styles/Stability Architecture=A Hyperrealistic photograph " +
            "of German architectural building, lens flares, cinematic, hdri, matte painting, " +
            "concept art, celestial, soft render, highly detailed, cgsociety, octane render, " +
            "architectural HD, HQ, 4k, 8k</string>\r\n  <string>Cinematography/Cinematic lighti" +
            "ng=cinematic lighting</string>\r\n  <string>Cinematography/Low angle=photograph, t" +
            "aken from a low angle</string>\r\n  <string>Cinematography/Over the shoulder=photo" +
            "graph, over-the-shoulder</string>\r\n  <string>Cinematography/Drone footage=photog" +
            "raph taken from a drone</string>\r\n  <string>Cinematography/Close up=close up</st" +
            "ring>\r\n  <string>Cinematography/Wide angle=wide angle</string>\r\n  <string>Cinema" +
            "tography/Movie ccene=anamorphic lens film scene movie still f/2 800iso 35mm ligh" +
            "t dust haze</string>\r\n  <string>Cinematography/Golden hour=golden hour</string>\r" +
            "\n  <string>Cinematography/beautiful lighting=beautiful lighting</string>\r\n  <str" +
            "ing>Sources/artstation=artstation</string>\r\n  <string>Sources/instagram=instagra" +
            "m</string>\r\n  <string>Sources/deviantart=deviantart</string>\r\n  <string>Sources/" +
            "reddit=reddit</string>\r\n  <string>Sources/shutterstock=shutterstock</string>\r\n  " +
            "<string>Sources/tumblr=tumblr</string>\r\n  <string>Sources/cgsociety=cgsociety</s" +
            "tring>\r\n  <string>Sources/flickr=flickr</string>\r\n  <string>Sources/behance=beha" +
            "nce</string>\r\n  <string>Sources/dribble=dribble</string>\r\n  <string>Sources/pexe" +
            "ls=pexels</string>\r\n  <string>Sources/pinterest=pinterest</string>\r\n  <string>So" +
            "urces/pixabay=pixabay</string>\r\n  <string>Sources/pixiv=pixiv</string>\r\n  <strin" +
            "g>Sources/polycount=polycount</string>\r\n  <string>Effects/post processing=post p" +
            "rocessing</string>\r\n  <string>Effects/cgi=cgi</string>\r\n  <string>Effects/chroma" +
            "tic aberration=chromatic aberration</string>\r\n  <string>Effects/anaglyph=anaglyp" +
            "h</string>\r\n  <string>Effects/cropped=cropped</string>\r\n  <string>Effects/glowin" +
            "g edges=glowing edges</string>\r\n  <string>Effects/glow effect=glow effect</strin" +
            "g>\r\n  <string>Effects/bokeh=bokeh</string>\r\n  <string>Effects/dramatic lighting=" +
            "dramatic lighting</string>\r\n  <string>Effects/soft lighting=soft lighting</strin" +
            "g>\r\n  <string>Effects/hard lighting=hard lighting</string>\r\n  <string>Effects/gl" +
            "amor shot=glamor shot</string>\r\n  <string>Effects/colourful=colourful</string>\r\n" +
            "  <string>Effects/complimentary-colours=complimentary-colours</string>\r\n  <strin" +
            "g>Effects/dark mood=dark mood</string>\r\n  <string>Effects/multiverse=multiverse<" +
            "/string>\r\n  <string>Effects/volumetric lighting=volumetric lighting</string>\r\n  " +
            "<string>Effects/lumen global illumination=lumen global illumination</string>\r\n  " +
            "<string>Effects/octane render=octane render</string>\r\n  <string>Effects/atmosphe" +
            "ric=atmospheric</string>\r\n  <string>Effects/technicolour=technicolour</string>\r\n" +
            "  <string>Mediums/photo realistic=photo realistic</string>\r\n  <string>Mediums/an" +
            "ime=anime manga</string>\r\n  <string>Mediums/graphic novel=graphic novel</string>" +
            "\r\n  <string>Mediums/fountain pen=fountain pen</string>\r\n  <string>Mediums/pastel" +
            " art=pastel art</string>\r\n  <string>Mediums/fine art=fine art</string>\r\n  <strin" +
            "g>Mediums/acrylic paint=acrylic paint</string>\r\n  <string>Mediums/oil paint=oil " +
            "paint</string>\r\n  <string>Mediums/watercolour=watercolour</string>\r\n  <string>Me" +
            "diums/digital art=digital art</string>\r\n  <string>Mediums/magazine=magazine</str" +
            "ing>\r\n  <string>Mediums/comic book=comic book</string>\r\n  <string>Mediums/pokemo" +
            "n card=pokemon card</string>\r\n  <string>Mediums/puzzle=puzzle</string>\r\n  <strin" +
            "g>Mediums/logo=logo</string>\r\n  <string>Mediums/editorial photography=editorial " +
            "photography</string>\r\n  <string>Mediums/wildlife photography=wildlife photograph" +
            "y</string>\r\n  <string>Negative/Photo=cartoon anime art painting ugly</string>\r\n " +
            " <string>Negative/Portrait=bad anatomy bad proportions blurry cloned face deform" +
            "ed disfigured duplicate gross proportions long neck mutation mutilated morbid ou" +
            "t of frame poorly drawn face</string>\r\n  <string>Negative/Hands=poorly drawn han" +
            "ds extra arms extra fingers extra limbs extra legs too many fingers fused finger" +
            "s malformed limbs missing arms missmg legs mutated hands</string>\r\n  <string>Neg" +
            "ative/Safety=nsfw nude naked</string>\r\n  <string>Negative/Landscape=portrait per" +
            "son people text signature watermark frame framed display</string>\r\n  <string>Neg" +
            "ative/High Quality=lowres text error cropped worst quality low quality normal qu" +
            "ality jpeg artifacts signature watermark username blurry artist name deformed di" +
            "sfigured poorly drawn out of focus censorship amateur drawing bad art poor art m" +
            "essy drawing</string>\r\n  <string>Negative/Stability Portrait=fox in a lab coat, " +
            "extra limb, from scene from twin peaks, brutalist futuristic interior, retro fut" +
            "urism, dramatic nautical scene , ornate hospital room, crumbling masonry, pale b" +
            "lue armor, mechanical paw, laser guns, pulp sci fi, two deer wearing suits</stri" +
            "ng>\r\n  <string>Negative/Stability Portrait2=colourful 3d crystals and gems, vint" +
            "age 1950s stamp, full color manga cover, kewpie, two girls, anime, fairytale ill" +
            "ustration, chinese ribbon dance, children illustration, flower dress, illustrati" +
            "on, silk shoes, classic children\'s illustrations, adorable and whimsical</string" +
            ">\r\n  <string>Negative/Stability Portrait3=blender, cropped, lowres, poorly drawn" +
            " face, out of frame, poorly drawn hands, double, blurred, disfigured, deformed, " +
            "repetitive, black and white</string>\r\n  <string>Negative/Stability Landscape=wea" +
            "ring victorian brass goggles, alien, alien isolation, ink on paper, flash sheet," +
            " robot barkeep, black micron pen illustration, black bandage on arms, mcbess, gr" +
            "id of eye shapes, moscow metro, b&amp;w, childish, steelpunk, holding a cigar, d" +
            "ark show room, dieselpunk, necromancer, mouse face</string>\r\n  <string>Negative/" +
            "Stability Digital Art=autumn rain turkel, two finnish lapphundsv 2d lasercut ear" +
            "rings tribal dance, risograph, white orchids, egyptian sumerian features, large " +
            "temples, childish</string>\r\n  <string>Negative/Stability Digital Art2=tintype ph" +
            "otograph, moth inspired dress, red on black, lace dress, deformed, 1970 film pho" +
            "tography, very sexy woman with black hair, fashion model portrait, alien faces, " +
            "animal photography, disfigured</string>\r\n  <string>Negative/Stability Sci-Fi Art" +
            "=trees in foreground, ink pen sketch, on a velvet tablecloth, black ink on textu" +
            "red paper, long black straight hair, pencil skit pink lips, sophisticated hands," +
            " noir, mystic winter landscape, linocut print, sailboats, watercolor strokes, gr" +
            "ass landscape, pink rose, vintage 1950s stamp</string>\r\n  <string>Negative/Stabi" +
            "lity Sci-Fi Render=1980s flower power hippy, impressionist watercolor, sitting a" +
            "t the beach, hot pink, german expressionist woodcut, wearing in stocking, pen dr" +
            "awing, young woman, on a branch, watercolour on paper, green and pink, wearing s" +
            "hades, in a garden, drinking their hearts out, old</string>\r\n  <string>Negative/" +
            "Stability Comic=lofi bioshock steampunk portrait, 4k digital painting, tapir, fe" +
            "male portrait with flowers, metamorphosis complex 3d render, white petal, skyrim" +
            " screenshot, fine art fashion photography, side portrait ofa girl, lotus flower," +
            " lost place photo, black and white, text, title</string>\r\n  <string>Negative/Sta" +
            "bility Comic2=I elderly greek goddess, 1900s photograph, long glowing ethereal h" +
            "air, gorgeous face, brown hair!, calotype, sheep wool, hammershoi, eyelashes, dr" +
            "eamy and ethereal, single pine, nsfw, white lilies, flowers on hair</string>\r\n  " +
            "<string>Negative/Stability Fantacy=troops searching the area, from police academ" +
            "y 2 (1985), gunma prefecture, concrete housing, nsfw, blur, wood block print, in" +
            " africa, kodak tri - x 3 5 mm, black lace, american flag, football players, toky" +
            "ojapan, ferrari 458, woodblock print</string>\r\n  <string>Negative/Stability Cybe" +
            "rpunk=purple and red flowers, wood block print, idyllic and fruitful land, stand" +
            "ing on a ladder, postman pat, gnome druid, botanic watercolors, aged paper, stan" +
            "ding with a parasol, she has a crown of dried flowers, wearing an apron, pink do" +
            "or, nature journal, theodor kittelsen, harvest fall vibrancy, crop</string>\r\n  <" +
            "string>Negative/Stability Cars=blue sky and white clouds, gourds, 1880 photograp" +
            "h, troops searching the area, b&amp;w, rolling green hills, aboriginal engraving" +
            ", arge black hat, spiral lines, several cottages, with anchor man and woman, ink" +
            " drawing, brown hair, wide greenways, black ink on white paper</string>\r\n  <stri" +
            "ng>Negative/Stability Texture=fox in a lab coat, extra limb, from scene from twi" +
            "n peaks, brutalist futuristic interior, retro futurism, dramatic nautical scene," +
            " ornate hospital room, crumbling masonry, pale blue armor, mechanical paw, laser" +
            " guns, pulp sci fi, two deer wearing suits</string>\r\n  <string>Negative/Stabilit" +
            "y Food=warframe hound art, black ink on white paper, art nouveau ink illustratio" +
            "n, huge feathery wings, holding a tattered magical book, anubis, lots of furnitu" +
            "re, clockwork steampunk, low quality, childish, mecha suit, blue moonlight, many" +
            " mechflowers, fancy clouds, crazy hacker girl, blue flames, solarpunk, undersea " +
            "temple, in a lavender field in france : -5</string>\r\n  <string>Negative/Stabilit" +
            "y Food2=fantasy dungeon, beautiful woman pot-trait, on stilts, tribal dance, 3d " +
            "high definition, cell shaded cartoon, dozens of jeweled necklaces, disco lights," +
            " in full military garb, long neck, rainbow aura crystals, full moon lighting, pa" +
            "tterned visionary art, laser guns, mystic winter landscape, feathered arrows, mi" +
            "rror selfie</string>\r\n  <string>Negative/Stability Character=dramatic space batt" +
            "le, engraving from 1700s, spinosaurus, illegible rosicrucian symbols, medieval w" +
            "oodcut, elegant evening gowns!, battle of 1453, black ink on white paper, orname" +
            "ntal arrows, croatian coastline, lush vegetation, arabian beauty, 1990s 1992 seg" +
            "a genesis box att : -5</string>\r\n  <string>Negative/Stability Character2=pen and" +
            " ink doodles, blowing hair, in the foreground a small town, white frame, soft bl" +
            "ues and greens, capybara, long flowing hair, polish poster an, books and flowers" +
            ", fairytale illustration, cute and funny, white stockings, cropped, out of frame" +
            " : -5</string>\r\n</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection PromptHelperPresets {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["PromptHelperPresets"]));
            }
            set {
                this["PromptHelperPresets"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Welcome,Test")]
        public string SortList {
            get {
                return ((string)(this["SortList"]));
            }
            set {
                this["SortList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool EnableSortList {
            get {
                return ((bool)(this["EnableSortList"]));
            }
            set {
                this["EnableSortList"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public string SaveProgress {
            get {
                return ((string)(this["SaveProgress"]));
            }
            set {
                this["SaveProgress"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public string SafetyChecker {
            get {
                return ((string)(this["SafetyChecker"]));
            }
            set {
                this["SafetyChecker"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("C:\\invokeai\\outputs")]
        public string OutputPath {
            get {
                return ((string)(this["OutputPath"]));
            }
            set {
                this["OutputPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string OpenAIAPIKey {
            get {
                return ((string)(this["OpenAIAPIKey"]));
            }
            set {
                this["OpenAIAPIKey"] = value;
            }
        }
    }
}
